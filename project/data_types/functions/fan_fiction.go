package functions

import (
	"fmt"
	"math/rand"
)

// // Функция brewIceLatte просто готовит айс-латте (действие без параметров и возврата)
// func BrewIceLatte() {
// 	fmt.Println("Женя достаёт блендер: 'Время магии! Кокосовое молоко, солёная карамель, шокоболы, лёд!'")
// 	fmt.Println("*Громкий звук блендера*")
// 	fmt.Println("Айс-Латте за 750 рублей готов!")
// }

// // Функция calculateMaskPrice принимает несколько параметров: базовые компоненты
// func CalculateMaskPrice(clayType string, isGoldFlakes bool, leopardEssence float64) float64 {
// 	basePrice := 1500.0 // Базовая цена (как кредит под проценты)
// 	if clayType == "Черная икра" {
// 		basePrice += 1000
// 	}
// 	if isGoldFlakes {
// 		basePrice += 500
// 	}
// 	price := basePrice + (leopardEssence * 300) // Леопардовый экстракт - дорого!
// 	fmt.Printf("Маска '%s' с экстрактом леопарда (%.1f мл) ", clayType, leopardEssence)
// 	if isGoldFlakes {
// 		fmt.Print("и золотыми блестками ")
// 	}
// 	fmt.Printf("стоит: %.2f руб. (Пассивный доход? Почти!)\n", price)
// 	return price
// }

// // Функция cookNoraOmelette возвращает именованный результат success (bool)
// func СookNoraOmelette(eggs int, sausage string) (success bool) {
// 	fmt.Println("Кубинская секретарша Нора на кухне офиса:")
// 	if eggs < 2 {
// 		fmt.Println("¡Problema! Нужно ДВА яйца! Это же основа омлета доктора!")
// 		success = false // Не хватает яиц - провал
// 		return success  // Возвращаем значение success (false) досрочно
// 	}
// 	if sausage != "Сарделька" {
// 		fmt.Println("¡No es correcto! Доктор Токсиков принимает только с САРДЕЛЬКОЙ!")
// 		success = false // Не тот вид мясных продуктов - провал
// 		return success
// 	}
// 	fmt.Printf("*Звуки взбивания %d яиц*\n", eggs)
// 	fmt.Println("*Аромат жареной сардельки заполняет этаж*")
// 	fmt.Println("Омлет доктора Токсикова готов! Секретарша Нора улыбается.")
// 	success = true // Успех!
// 	return         // Возвращаем значение success (true)
// }

// // Функция fireFromItJob возвращает несколько результатов: причину и реакцию
// func FireFromItJob(employeeName string) (reason string, reaction string) {
// 	reasons := []string{
// 		"Оптимизация (читай: 'Евгений Прокофьевич, Ваши леопардовые лосины пугают наших клиентов')",
// 		"Несовместимость с корпоративным духом (читай: 'Отказывается таскать в офис по лестнице на 30-ый этаж оргтехнику по причине депрессии')",
// 		"Слишком много времени на продажу конфетных коробок и собачьей шерсти в рабочее время",
// 		"Отказался со старшим топ-менеджером ехать на городской велофестиваль",
// 	}
// 	randReason := reasons[rand.Intn(len(reasons))] // Выбираем случайную абсурдную причину

// 	reactions := []string{
// 		"Запускает финансовый блог 'Умный Инвестор'",
// 		"Накладывает косметическую релакс-маску и смотрит турнир по боксу",
// 		"Едет на внедорожнике в кафе за углом за айс-латте за 750 рублей, залить горе",
// 	}
// 	randReaction := reactions[rand.Intn(len(reactions))] // Выбираем случайную реакцию

// 	fmt.Printf("%s уволен! Причина: %s\n", employeeName, randReason)
// 	fmt.Printf("Как отреагировал на увольнение %s: %s\n", employeeName, randReaction)
// 	return randReason, randReaction
// }

// // Функция conductTherapySession возвращает несколько ИМЕНОВАННЫХ результатов
// func ConductTherapySession(patientName string, problem string) (
// 	diagnosis string,
// 	recommendation string,
// 	cost float64,
// ) {
// 	// Именованные результаты уже объявлены выше

// 	diagnosis = "Острая айти-ломка с элементами ностальгии по Python" // Диагноз
// 	if strings.Contains(problem, "Go") {
// 		recommendation = "СРОЧНО вгрызаться в Go! Концентрация! Никаких 'Сам себе программист' Альтхоффа! Гошник - ваш символ!" // Рекомендация
// 	} else {
// 		recommendation = "Рассмотреть возможность пенсии по депрессии (спросите Барбоскина)"
// 	}
// 	cost = 50000.0 // Стоимость сеанса (часы Лесли дорогие!)

// 	fmt.Printf("Пациент: %s | Проблема: '%s'\n", patientName, problem)
// 	fmt.Printf("Диагноз Многоуважаемого Господина Психиатра Лесли Токсикова: %s\n", diagnosis)
// 	fmt.Printf("Рекомендация: %s\n", recommendation)
// 	fmt.Printf("Стоимость сеанса (пока вы смотрели на гофера на плазме 8K): %.2f руб.\n", cost)
// 	fmt.Println("*Лесли причмокивает, доедая кекс 'Тролль': 'А, кекс Тролль! И да, это мой Роллс-Ройс внизу.'*")

// 	return // Возвращаем diagnosis, recommendation, cost (явно указывать не обязательно)
// }

// Функция handleHaters принимает вариативное количество параметров (имена хейтеров)
// и дополняет их внутренней армией троллей
func HandleHaters(externalHaters ...string) string {
	// Внутренняя армия хейтеров (генерируется автоматически)
	innerArmy := []string{
		"IT_Пессимист",
		"Питонодав",
		"ГоСкептик",
		"АнонимныйТролль",
		"Душнила",
		"Токсичный Бро",
		"Огуречный Рассол",
		"Жирный Скуф",
		"Балаболка",
		"Диванный Боец Тапочкин",
		"Картошечкин",
		"Лосьон",
		"Лапуська",
		"Тролль Кекс",
		"Хейтер Харитоныч",
		"Озоновая Мурлыка",
	}

	// Объединяем внешних и внутренних хейтеров
	allHaters := append(externalHaters, innerArmy...)

	fmt.Println("Кучка хейтеров атакует блог Саши! В чатике:", len(allHaters), "троллей")

	// Коллекция смертоносных комментариев
	haterComments := []string{
		"Через месяц бросишь Go, как бросил Python!",
		"Не айтишник, а неудачник по жизни!",
		"Твой код на Go - как пенсия Барбоскина: смех и ничего больше!",
		"37 лет и только функции учишь? Опоздал на поезд, дед!",
		"Лучше бы посудомойку купил, чем Go учить!",
		"Народ угорает с твоего кода!",
		"Из тебя программист, как из Барбоскина - балерина!",
		"Изучаешь функции? Поздновато для сорокалетних!",
		"Твой роадмап по Go - дорога в никуда!",
		"Бросишь Go быстрее, чем Барбоскин лосины меняет!",
		"У тебя депрессия? Это от осознания своей никчемности в IT!",
		"Идешь в айти? Только уборщиком в офис к Токсикову!",
		"Твой блог - пособие по провальной карьере!",
		"Go выучить? Сначала депрессию вылечи, как Женя!",
		"Фигурные скобки тебя не спасут!",
		"Слышь айти-голоса? Да уж, это жесть..!",
		"Твой код пахнет хуже, чем Женя после фрисби!",
		"Учишь Go? Ну и как? Ещё лет 10 хватит?",
		"Распыляешься как крем Барбоскина по лицу!",
		"Сменил Python на Go? Меняешь языки чаще, чем носки!",
	}

	// Выводим все комментарии
	for i, hater := range allHaters {
		comment := haterComments[rand.Intn(len(haterComments))]
		fmt.Printf("  %d. [%s]: %s\n", i+1, hater, comment)
	}

	// Генерация эпичного ответа
	response := fmt.Sprintf("Комментарии закрыты! Я отражаю атаку %d хейтеров.\n"+
		"Иду вгрызаться в синтаксис Go, оставив Python в прошлом,\n"+
		"Полная фокусировка на языке Go - это верная стратегия!", len(allHaters))

	return response
}
